import discord
from discord import app_commands
from src.database import (
    get_settings, save_settings, init_owners, owners_cache, is_owner, save_capt,
    add_to_blacklist, get_blacklist, get_blacklist_report_channel
)
from src.permissions import requires_approver
from src.views import FormMessageModal, CaptView


class CommandHandler:
    def __init__(self, bot):
        self.bot = bot
    
    async def handle_error(self, interaction: discord.Interaction, error_message: str):
        if interaction.response.is_done():
            await interaction.followup.send(error_message, ephemeral=True)
        else:
            await interaction.response.send_message(error_message, ephemeral=True)


class BaseCommand(CommandHandler):
    def __init__(self, bot):
        super().__init__(bot)
    
    async def validate_guild(self, interaction: discord.Interaction) -> bool:
        if interaction.guild is None:
            await self.handle_error(interaction, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
            return False
        return True


class AddFormCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction, channel: discord.TextChannel):
        try:
            if not await self.validate_guild(interaction):
                return
            
            save_settings(interaction.guild_id, form_channel_id=channel.id)
            await interaction.response.send_modal(FormMessageModal(channel_id=channel.id))
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ addform: {e}")


class ApprovalChannelCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction, channel: discord.TextChannel = None):
        try:
            if not await self.validate_guild(interaction):
                return
            
            save_settings(interaction.guild_id, approv_channel_id=channel.id if channel else None)
            
            if channel:
                await interaction.response.send_message(f"‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {channel.mention}", ephemeral=True)
            else:
                await interaction.response.send_message("‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ —É–¥–∞–ª–µ–Ω.", ephemeral=True)
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ approvchannel: {e}")


class GiveApprovalCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction, approver: discord.Role, approved: discord.Role):
        try:
            if not await self.validate_guild(interaction):
                return
            
            save_settings(
                interaction.guild_id,
                approver_role_id=approver.id,
                approved_role_id=approved.id
            )
            
            embed = self._create_roles_embed(approver, approved)
            await interaction.response.send_message(embed=embed, ephemeral=True)
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ giveapprov: {e}")
    
    def _create_roles_embed(self, approver: discord.Role, approved: discord.Role) -> discord.Embed:
        embed = discord.Embed(
            title="‚úÖ –†–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã",
            description="–°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª–µ–π –¥–ª—è –∑–∞—è–≤–æ–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:",
            color=0x00ff00
        )
        embed.add_field(
            name="üõ°Ô∏è –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤", 
            value=f"{approver.mention}\n*–ú–æ–∂–µ—Ç –æ–¥–æ–±—Ä—è—Ç—å/–æ—Ç–∫–ª–æ–Ω—è—Ç—å –∑–∞—è–≤–∫–∏*", 
            inline=False
        )
        embed.add_field(
            name="üéØ –†–æ–ª—å –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏", 
            value=f"{approved.mention}\n*–í—ã–¥–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏*", 
            inline=False
        )
        return embed


class CheckRolesCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction):
        try:
            if not await self.validate_guild(interaction):
                return
                
            init_owners()
            guild_id_str = str(interaction.guild_id)
            approver_role_id = owners_cache.get('approver_role_ids', {}).get(guild_id_str)
            
            embed = discord.Embed(
                title="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–µ–π",
                color=0x3498db
            )
            
            self._add_moderator_role_field(embed, interaction.guild, approver_role_id)
            
            form_channel_id, approv_channel_id, approver_role_id_from_settings, approved_role_id, blacklist_report_channel_id = get_settings(interaction.guild_id)
            
            self._add_approved_role_field(embed, interaction.guild, approved_role_id)
            
            await interaction.response.send_message(embed=embed, ephemeral=True)
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ checkroles: {e}")
    
    def _add_moderator_role_field(self, embed: discord.Embed, guild: discord.Guild, approver_role_id: str):
        if approver_role_id:
            role = guild.get_role(int(approver_role_id))
            if role:
                embed.add_field(
                    name="üõ°Ô∏è –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤", 
                    value=f"```diff\n+ {role.name}\n```\nüìã **ID:** `{approver_role_id}`\nüë§ **–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ:** {role.mention}\nüìä **–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é:** {len(role.members)}", 
                    inline=False
                )
            else:
                embed.add_field(
                    name="üõ°Ô∏è –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤", 
                    value=f"```diff\n- –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n```\nüÜî **–ü–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑–≤–µ—Å—Ç–Ω—ã–π ID:** `{approver_role_id}`\n‚ö†Ô∏è **–°—Ç–∞—Ç—É—Å:** –¢—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", 
                    inline=False
                )
        else:
            embed.add_field(
                name="üõ°Ô∏è –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤", 
                value="```yaml\n–°—Ç–∞—Ç—É—Å: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞\n```\nüîß **–î–µ–π—Å—Ç–≤–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/giveapprov` –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", 
                inline=False
            )
    
    def _add_approved_role_field(self, embed: discord.Embed, guild: discord.Guild, approved_role_id: str):
        if approved_role_id:
            approved_role = guild.get_role(int(approved_role_id))
            if approved_role:
                embed.add_field(
                    name="üéØ –†–æ–ª—å –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏", 
                    value=f"```diff\n+ {approved_role.name}\n```\nüìã **ID:** `{approved_role_id}`\nüë§ **–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ:** {approved_role.mention}\nüìä **–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é:** {len(approved_role.members)}", 
                    inline=False
                )
            else:
                embed.add_field(
                    name="üéØ –†–æ–ª—å –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏", 
                    value=f"```diff\n- –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n```\nüÜî **–ü–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑–≤–µ—Å—Ç–Ω—ã–π ID:** `{approved_role_id}`\n‚ö†Ô∏è **–°—Ç–∞—Ç—É—Å:** –¢—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è", 
                    inline=False
                )
        else:
            embed.add_field(
                name="üéØ –†–æ–ª—å –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏", 
                value="```yaml\n–°—Ç–∞—Ç—É—Å: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞\n```\nüîß **–î–µ–π—Å—Ç–≤–∏–µ:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/giveapprov` –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", 
                inline=False
            )


class HelpCommand(CommandHandler):
    async def execute(self, interaction: discord.Interaction):
        try:
            embed = self._create_help_embed(interaction)
            await interaction.response.send_message(embed=embed, ephemeral=True)
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ help: {e}")
    
    def _create_help_embed(self, interaction: discord.Interaction) -> discord.Embed:
        embed = discord.Embed(
            title="üìã –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞",
            description="–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:",
            color=0x3498db
        )
        
        commands_data = [
            ("üìù /addform", "–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("‚öôÔ∏è /approvchannel", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("üë• /giveapprov", "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ–ª–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—è–≤–æ–∫\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("üîç /checkroles", "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("üìã /createcapt", "–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("üì¢ /blacklistchannel", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("‚õî /blacklist", "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–º–µ–π –ø–æ ID –∏ –∏–≥—Ä–æ–≤–æ–º—É ID\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("üìù /showblacklist", "–ü–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–º–µ–π\n*–¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞*"),
            ("‚ùì /help", "–ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n*–î–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–º*")
        ]
        
        for name, value in commands_data:
            embed.add_field(name=name, value=value, inline=False)
        
        if is_owner(interaction.user.id):
            embed.add_field(
                name="üîÑ /sync",
                value="–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã\n*–¢–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –±–æ—Ç–∞*",
                inline=False
            )
        
        embed.set_footer(text="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '/' –≤ —á–∞—Ç–µ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥")
        return embed


class SyncCommand(CommandHandler):
    async def execute(self, interaction: discord.Interaction):
        try:
            if not is_owner(interaction.user.id):
                await self.handle_error(interaction, "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –±–æ—Ç–∞.")
                return
            
            await interaction.response.defer(ephemeral=True)
            
            try:
                synced = await self.bot.tree.sync()
                embed = self._create_sync_embed(synced)
                await interaction.followup.send(embed=embed, ephemeral=True)
                print(f"‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≤—Ä—É—á–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user}")
                
            except Exception as e:
                await interaction.followup.send(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {str(e)}", ephemeral=True)
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
                
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ sync: {e}")
    
    def _create_sync_embed(self, synced: list) -> discord.Embed:
        embed = discord.Embed(
            title="‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
            description=f"–£—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ **{len(synced)}** –∫–æ–º–∞–Ω–¥:",
            color=0x00ff00
        )
        
        command_list = "\n".join([f"üîπ /{cmd.name}" for cmd in synced])
        embed.add_field(
            name="–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:",
            value=command_list if command_list else "–ù–µ—Ç –∫–æ–º–∞–Ω–¥",
            inline=False
        )
        
        embed.set_footer(text="–ö–æ–º–∞–Ω–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Discord")
        return embed


class CreateCaptCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction, max_members: int):
        try:
            if not await self.validate_guild(interaction):
                return
            
            if not self._validate_members_count(max_members):
                await self.handle_error(interaction, "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 25")
                return
            
            embed = self._create_capt_embed(max_members)
            view = CaptView(max_members)
            message = await interaction.channel.send(embed=embed, view=view)
            
            save_capt(interaction.guild_id, interaction.channel_id, message.id, max_members, [])
            await interaction.response.send_message("‚úÖ –ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!", ephemeral=True, delete_after=0)
            
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ createcapt: {e}")
    
    def _validate_members_count(self, max_members: int) -> bool:
        return 1 <= max_members <= 25
    
    def _create_capt_embed(self, max_members: int) -> discord.Embed:
        return discord.Embed(
            title="üìã –ì—Ä—É–ø–ø–∞",
            description=f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ (0/{max_members}):\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–µ.",
            color=0x3498db
        )


class BlacklistChannelCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction, channel: discord.TextChannel):
        try:
            if not await self.validate_guild(interaction):
                return
            
            save_settings(interaction.guild_id, blacklist_report_channel_id=channel.id)
            await interaction.response.send_message(f"‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {channel.mention}", ephemeral=True)
            
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ blacklistchannel: {e}")


class BlacklistCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction, user_id: str, static_id_majestic: str, reason: str):
        try:
            if not await self.validate_guild(interaction):
                return

            report_channel = await self._get_report_channel(interaction)
            if not report_channel:
                return

            user, member = await self._find_user_and_member(interaction, user_id)
            if not user or not member:
                return

            add_to_blacklist(interaction.guild_id, user.id, reason, interaction.user.id, static_id_majestic)
            
            embed = self._create_blacklist_embed(user, static_id_majestic, reason, interaction.user)
            await report_channel.send(embed=embed)
            
            await self._ban_user(interaction, member, user, reason)
            
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ blacklist: {e}")
    
    async def _get_report_channel(self, interaction: discord.Interaction):
        report_channel_id = get_blacklist_report_channel(interaction.guild_id)
        if not report_channel_id:
            await self.handle_error(interaction, "‚ùå –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /blacklistreport")
            return None

        report_channel = interaction.guild.get_channel(int(report_channel_id))
        if not report_channel:
            await self.handle_error(interaction, "‚ùå –ö–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /blacklistreport")
            return None
        
        return report_channel
    
    async def _find_user_and_member(self, interaction: discord.Interaction, user_id: str):
        try:
            user = await self.bot.fetch_user(int(user_id))
            if not user:
                await self.handle_error(interaction, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return None, None
            
            member = await interaction.guild.fetch_member(user.id)
            if not member:
                await self.handle_error(interaction, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                return None, None
                
            return user, member
            
        except (ValueError, discord.NotFound):
            await self.handle_error(interaction, f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return None, None
        except discord.HTTPException as e:
            await self.handle_error(interaction, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
            return None, None
    
    def _create_blacklist_embed(self, user: discord.User, static_id_majestic: str, reason: str, moderator: discord.User) -> discord.Embed:
        embed = discord.Embed(
            title="‚õî –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ",
            description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–º–µ–π",
            color=0xFF0000
        )
        
        embed.add_field(
            name="üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            value=f"{user.mention} ({user.name}#{user.discriminator})\nID: {user.id}",
            inline=False
        )

        embed.add_field(
            name="üéÆ –ò–≥—Ä–æ–≤–æ–π StaticID",
            value=f"{static_id_majestic}",
            inline=False
        )
        
        embed.add_field(
            name="üìù –ü—Ä–∏—á–∏–Ω–∞",
            value=reason,
            inline=False
        )
        
        embed.add_field(
            name="üëÆ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä",
            value=f"{moderator.mention} ({moderator.name}#{moderator.discriminator})",
            inline=False
        )
        
        return embed
    
    async def _ban_user(self, interaction: discord.Interaction, member: discord.Member, user: discord.User, reason: str):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –¥–ª—è –±–∞–Ω–∞
            bot_member = interaction.guild.get_member(self.bot.user.id)
            if not bot_member.guild_permissions.ban_members:
                await interaction.response.send_message(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –Ω–æ —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –±–∞–Ω —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.", ephemeral=True)
                print(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –∑–∞–±–∞–Ω–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–µ—Ä–∞—Ä—Ö–∏–∏ —Ä–æ–ª–µ–π)
            if member.top_role >= bot_member.top_role:
                await interaction.response.send_message(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –Ω–æ —É –±–æ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–µ—Ä–∞—Ä—Ö–∏—è —Ä–æ–ª–µ–π).", ephemeral=True)
                print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} (–∏–µ—Ä–∞—Ä—Ö–∏—è —Ä–æ–ª–µ–π)")
                return
            
            print(f"üî® –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} ({user.name}#{user.discriminator})")
            
            # –ë–∞–Ω–∏–º—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ —Å —Å–µ—Ä–≤–µ—Ä–∞)
            await interaction.guild.ban(user, reason=f"–î–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫: {reason}")
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω")
            await interaction.response.send_message(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏ –∑–∞–±–∞–Ω–µ–Ω.", ephemeral=True)
        except discord.Forbidden as e:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}")
            await interaction.response.send_message(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –Ω–æ —É –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –±–∞–Ω–∞.", ephemeral=True)
        except discord.HTTPException as e:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}")
            await interaction.response.send_message(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ: {str(e)}", ephemeral=True)


class ShowBlacklistCommand(BaseCommand):
    @requires_approver()
    async def execute(self, interaction: discord.Interaction):
        try:
            if not await self.validate_guild(interaction):
                return
            
            blacklist = get_blacklist(interaction.guild_id)
            
            if not blacklist:
                await interaction.response.send_message("üìù –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç.", ephemeral=True)
                return
            
            embed = await self._create_blacklist_embed(blacklist)
            await interaction.response.send_message(embed=embed, ephemeral=True)
            
        except Exception as e:
            await self.handle_error(interaction, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.")
            print(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ showblacklist: {e}")
    
    async def _create_blacklist_embed(self, blacklist: dict) -> discord.Embed:
        embed = discord.Embed(
            title="üìù –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–º–µ–π",
            description="–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–µ—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ:",
            color=0xFF0000
        )
        
        for user_id, data in blacklist.items():
            user = await self.bot.fetch_user(int(user_id))
            reporter = await self.bot.fetch_user(int(data['reporter_id']))
            
            field_value = f"**ID:** {user_id}\n**–ü—Ä–∏—á–∏–Ω–∞:** {data['reason']}\n**–î–æ–±–∞–≤–∏–ª:** {reporter.name}#{reporter.discriminator}"
            
            if 'static_id_majestic' in data:
                field_value += f"\n**–ò–≥—Ä–æ–≤–æ–π ID:** {data['static_id_majestic']}"
            
            embed.add_field(
                name=f"üë§ {user.name}#{user.discriminator}",
                value=field_value,
                inline=False
            )
        
        return embed


class CommandRegistry:
    def __init__(self, bot):
        self.bot = bot
        self.commands = {
            'addform': AddFormCommand(bot),
            'approvchannel': ApprovalChannelCommand(bot),
            'giveapprov': GiveApprovalCommand(bot),
            'checkroles': CheckRolesCommand(bot),
            'help': HelpCommand(bot),
            'sync': SyncCommand(bot),
            'createcapt': CreateCaptCommand(bot),
            'blacklist': BlacklistCommand(bot),
            'showblacklist': ShowBlacklistCommand(bot),
            'blacklistchannel': BlacklistChannelCommand(bot)
        }
    
    def register_all(self):
        @self.bot.tree.command(
            name="addform", 
            description="üìù –°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
        )
        @app_commands.describe(
            channel="–ö–∞–Ω–∞–ª, –≥–¥–µ –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∞ —Ñ–æ—Ä–º–∞ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫"
        )
        async def addform(interaction: discord.Interaction, channel: discord.TextChannel):
            await self.commands['addform'].execute(interaction, channel)

        @self.bot.tree.command(
            name="approvchannel", 
            description="‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫"
        )
        @app_commands.describe(
            channel="–ö–∞–Ω–∞–ª –¥–ª—è –∑–∞—è–≤–æ–∫ (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–∞–ª–∞)"
        )
        async def approvchannel(interaction: discord.Interaction, channel: discord.TextChannel = None):
            await self.commands['approvchannel'].execute(interaction, channel)

        @self.bot.tree.command(
            name="giveapprov", 
            description="üë• –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ –∏ –≤—ã–¥–∞—á–∏ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏"
        )
        @app_commands.describe(
            approver="–†–æ–ª—å, —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ—Ç–æ—Ä–æ–π —Å–º–æ–≥—É—Ç –æ–¥–æ–±—Ä—è—Ç—å/–æ—Ç–∫–ª–æ–Ω—è—Ç—å –∑–∞—è–≤–∫–∏",
            approved="–†–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏"
        )
        async def giveapprov(interaction: discord.Interaction, approver: discord.Role, approved: discord.Role):
            await self.commands['giveapprov'].execute(interaction, approver, approved)

        @self.bot.tree.command(
            name="checkroles", 
            description="üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–ª–µ–π –∏ –∏—Ö –Ω–∞–ª–∏—á–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        )
        async def checkroles(interaction: discord.Interaction):
            await self.commands['checkroles'].execute(interaction)

        @self.bot.tree.command(
            name="help", 
            description="‚ùì –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"
        )
        async def help_command(interaction: discord.Interaction):
            await self.commands['help'].execute(interaction)

        @self.bot.tree.command(
            name="sync",
            description="üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —Å Discord"
        )
        async def sync_commands(interaction: discord.Interaction):
            await self.commands['sync'].execute(interaction)

        @self.bot.tree.command(
            name="createcapt",
            description="üìã –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"
        )
        @app_commands.describe(
            max_members="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥—Ä—É–ø–ø–µ (–æ—Ç 2 –¥–æ 25)"
        )
        async def createcapt(interaction: discord.Interaction, max_members: int):
            await self.commands['createcapt'].execute(interaction, max_members)

        @self.bot.tree.command(
            name="blacklistchannel",
            description="üì¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö"
        )
        @app_commands.describe(
            channel="–ö–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞—Ö"
        )
        async def blacklistchannel(interaction: discord.Interaction, channel: discord.TextChannel):
            await self.commands['blacklistchannel'].execute(interaction, channel)

        @self.bot.tree.command(
            name="blacklist",
            description="‚õî –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–º–µ–π"
        )
        @app_commands.describe(
            user_id="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1395845799174344776)",
            static_id_majestic="–ò–≥—Ä–æ–≤–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            reason="–ü—Ä–∏—á–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"
        )
        async def blacklist(interaction: discord.Interaction, user_id: str, static_id_majestic: str, reason: str):
            await self.commands['blacklist'].execute(interaction, user_id, static_id_majestic, reason)

        @self.bot.tree.command(
            name="showblacklist",
            description="üìù –ü–æ–∫–∞–∑–∞—Ç—å —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–µ–º–µ–π"
        )
        async def showblacklist(interaction: discord.Interaction):
            await self.commands['showblacklist'].execute(interaction)

        print("üìã –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")


async def setup_commands(bot):
    registry = CommandRegistry(bot)
    registry.register_all()